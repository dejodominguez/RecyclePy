
Runner.controls.bingMap=Runner.extend(Runner.emptyFn,{APIkey:window.settings['global'].googleMapsApiCode,defaultPPIconUrl:"",defaultMarkerColor:"darkmagenta",activeMarkerColor:"red",decorationPadding:10,decorationOffsetPoint:null,createMap:function($mapElem,zoom,centerLat,centerLng){var mapSettings={credentials:this.APIkey,height:$mapElem.get(0).clientHeight,width:$mapElem.get(0).clientWidth,showDashboard:false,enableClickableLogo:false};if(centerLat!==undefined&&centerLng!==undefined){mapSettings.center=this.mapsLatLng(centerLat,centerLng)}
$mapElem.html("");return new Microsoft.Maps.Map($mapElem.get(0),mapSettings);},getLocationByAddress:function(data){var lat,lng;if(data["statusCode"]!=200){return this.mapsLatLng(0,0);}
lat=this.getLatLngFromAjax(data,"lat");lng=this.getLatLngFromAjax(data,"lng");return this.mapsLatLng(lat,lng);},setCenter:function(address,map,zoom){var that=this;$.getJSON(this.urlLocationFromAddress(address),function(data){map.setView({center:that.getLocationByAddress(data),zoom:zoom});});},mapsLatLng:function(lat,lng){return new Microsoft.Maps.Location(lat,lng);},getMapInfoBox:function(marker,mapLocation,desc){var infoboxOptions={title:desc,offset:new Microsoft.Maps.Point(6,6),showCloseButton:false,showPointer:false,visible:false},infobox=new Microsoft.Maps.Infobox(mapLocation,infoboxOptions);Microsoft.Maps.Events.addHandler(marker,"mouseover",function(e){infobox.setOptions({visible:true});});Microsoft.Maps.Events.addHandler(marker,"mouseout",function(e){infobox.setOptions({visible:false});});return infobox;},setMarkerByCoords:function(markerData,mapData){var mapLocation=this.mapsLatLng(this.parseValue(markerData.lat),this.parseValue(markerData.lng)),mapIcon,pinInfobox;if(markerData.mapIcon){mapIcon=settings.global["webRootPath"]+markerData.mapIcon;}
markerData.marker=new Microsoft.Maps.Pushpin(mapLocation,{icon:mapIcon,color:this.defaultMarkerColor});pinInfobox=this.getMapInfoBox(markerData.marker,mapLocation,markerData.desc);mapData.map.entities.push(markerData.marker);pinInfobox.setMap(mapData.map);},setMarkerByAddress:function(markerData,mapData,onAddressResolvedHandler){var that=this;$.getJSON(this.urlLocationFromAddress(markerData.address),function(data){var mapLocation=that.getLocationByAddress(data),mapIcon,marker,pinInfobox;if(markerData.mapIcon){mapIcon=settings.global["webRootPath"]+markerData.mapIcon;}
marker=new Microsoft.Maps.Pushpin(mapLocation,{icon:mapIcon,color:this.defaultMarkerColor});pinInfobox=that.getMapInfoBox(marker,mapLocation,markerData.desc);mapData.map.entities.push(marker);pinInfobox.setMap(mapData.map);markerData.lat=that.getLatLngFromAjax(data,"lat");markerData.lng=that.getLatLngFromAjax(data,"lng");markerData.marker=marker;onAddressResolvedHandler();});},addOnMarkerClickHandler:function(marker,handler){Microsoft.Maps.Events.addHandler(marker,"click",handler);},triggerMarkerClickEvent:function(marker){Microsoft.Maps.Events.invoke(marker,"click");},destroyMarkers:function(mapData,markerData){mapData.map.entities.clear();},destroyMarker:function(map,marker){map.entities.remove(marker);},setZoomAuto:function(map,markers,boundLatLng){var arrLocation=[],viewRect;if(boundLatLng){arrLocation.push(this.mapsLatLng(markers[boundLatLng.minLatID].lat,markers[boundLatLng.minLatID].lng));arrLocation.push(this.mapsLatLng(markers[boundLatLng.minLngID].lat,markers[boundLatLng.minLngID].lng));arrLocation.push(this.mapsLatLng(markers[boundLatLng.maxLatID].lat,markers[boundLatLng.maxLatID].lng));arrLocation.push(this.mapsLatLng(markers[boundLatLng.maxLngID].lat,markers[boundLatLng.maxLngID].lng));viewRect=Microsoft.Maps.LocationRect.fromLocations(arrLocation);map.setView({bounds:viewRect});}},markerPosition:function(markerPos){return markerPos.position;},triggerResizeEvent:function(map){},setMapCenter:function(map,zoom,lat,lng){map.setView({center:this.mapsLatLng(lat,lng),zoom:zoom});},setZoom:function(map,zoom){map.setView({zoom:zoom});},getLatLngFromAjax:function(data,param){return data["resourceSets"][0]&&data["resourceSets"][0]["resources"][0]?data["resourceSets"][0]["resources"][0]["geocodePoints"][0]["coordinates"][param=="lat"?0:1]:0;},urlLocationFromAddress:function(address){return'http://dev.virtualearth.net/REST/v1/Locations?query='+encodeURI(address)+'&output=json&jsonp=?&key='+this.APIkey;},parseValue:function(aVal){return typeof(aVal)=='string'?parseFloat(aVal.replace(',','.')):aVal;},addOnMapLoadHandler:function(map,handler){handler();},addOnMapViewPortChangedHandler:function(map,handler){Microsoft.Maps.Events.addHandler(map,"viewchangeend",handler);},getMapViewPortCoordinates:function(map){var mapBounds=map.getBounds();return{n:mapBounds.getNorth(),s:mapBounds.getSouth(),e:mapBounds.getEast(),w:mapBounds.getWest()};},mapBoundsContains:function(marker,map){var mapBounds=map.getBounds();return mapBounds&&mapBounds.contains(marker.getLocation());},setMarkerActive:function(marker,customIcon){if(!marker){return;}
if(customIcon){this.decorateMarkerIcon(marker,settings.global["webRootPath"]+customIcon);}else{marker.setOptions({color:this.activeMarkerColor});}},getDecorationOffsetPoint:function(){if(!this.decorationOffsetPoint){this.decorationOffsetPoint=new Microsoft.Maps.Point(this.decorationPadding/2,this.decorationPadding/2);}
return this.decorationOffsetPoint;},decorateMarkerIcon:function(marker,icon){var img=new Image(),padding=this.decorationPadding,offsetPoint=this.getDecorationOffsetPoint();img.onload=function(){var c=document.createElement('canvas'),ctx,r;c.width=img.width+padding;c.height=img.height+padding;ctx=c.getContext('2d');ctx.strokeStyle='red';ctx.lineWidth=2;r=Math.max(c.width,c.height)/2-ctx.lineWidth;ctx.beginPath();ctx.arc(c.width/2,c.width/2,r,0,2*Math.PI);ctx.stroke();ctx.drawImage(img,padding/2,padding/2);marker.setOptions({icon:c.toDataURL(),anchor:(marker.getAnchor()||new Microsoft.Maps.Point(0,0)).add(offsetPoint)});};img.src=icon;},setMarkerInactive:function(marker,customIcon){if(!marker){return;}
if(customIcon){marker.setOptions({icon:settings.global["webRootPath"]+customIcon,anchor:marker.getAnchor().subtract(this.getDecorationOffsetPoint())});}else{marker.setOptions({color:this.defaultMarkerColor});}},isClusterHandlerToAdd:function(markerData){return false;},mapIsHeatmap:function(mapObj){return false;},initializeClusterMarkers:function(mapData){return null;},clusterHandler:function(markerData){}});